This paper describes the philosophy and structure of a multiprogramming sys- tem that can be extended with a hierarchy of operating systems to suit diverse requirements of program scheduling and resource allocation. The system nu- cleus simulates an environment in which program execution and input/output are handled uniformly as parallel, cooperating processes. A fundamental set of primitives allows the dynamic creation and control of a hierarchy of processes as well as the communication among them.The multiprogramming system developed by Regnecentralen for the RC 4000 computer is a general tool for the design of operating systems. It allows the dynamic creation of a hierarchy of processes in which diverse strategies of program scheduling and resource allocation can be implemented.
For the designer of advanced information systems, a vital requirement of any operating system is that it allow him to change the mode of operation it controls; otherwise his freedom of design can be seriously limited. Un- fortunately, this is precisely what present operating systems do not allow. Most of them are based exclusively on a single mode of operation, such as batch processing, priority scheduling, real-time scheduling, or conversational access.
kkk jjj
When the need arises, the user often finds it hopeless to modify an op- erating system that has made rigid assumptions in its basic design about a specific mode of operation. The alternative¡ªto replace the original operat- ing system with a new one¡ªis in most computers a serious, if not impossible,